parameters:
  # name:
  displayName:
  project:
  platformVariableGroup: ''
  buildConfigurations: [ Debug, Release ]

  # XamariniOS
  packageApp: false
  buildForSimulator: true
  xcodeArguments: ''
  signingIdentity: ''
  signingProvisioningProfileID: ''

  debug: false

jobs:
  - job: #${{ parameters.name }}
    displayName: ${{ parameters.displayName }}

    variables:
      - group: ${{ parameters.platformVariableGroup }}

    pool:
      vmImage: $(Job.VmImage)

    strategy:
      matrix:
        ${{ each configuration in parameters.buildConfigurations }}:
          ${{ each platform in parameters.buildPlatforms }}:
            "${{ platform }}|${{ configuration }}":
              BuildPlatform: ${{platform}}
              BuildConfiguration: ${{configuration}}

    steps:
      - checkout: self
        clean: false

      - task: Bash@3
        inputs:
          targetType: inline
          script: |
            ls /Library/Frameworks/Mono.framework/Versions/
        condition: ${{ parameters.debug }}

      - task: XamariniOS@2
        displayName: Build ${{ parameters.project }}
        inputs:
          solutionFile: ${{ parameters.project }}
          configuration: $(BuildConfiguration)
          clean: true
          packageApp: ${{ parameters.packageApp }}
          buildForSimulator: ${{ parameters.buildForSimulator }}
          runNugetRestore: true
          args: ${{ parameters.xcodeArguments }}
          mdtoolFile: /Library/Frameworks/Mono.framework/Versions/$(XamariniOS.MonoVersion)/bin/msbuild
          signingIdentity: ${{ parameters.signingIdentity }}
          signingProvisioningProfileID: ${{ parameters.signingProvisioningProfileID }}
